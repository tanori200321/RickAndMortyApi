@page "/lifecycle-demo"

<h3>Component Lifecycle Demo</h3>

<p>Check the browser console to see the lifecycle events.</p>

@code {

    // OnInitialized: Este método se ejecuta cuando se inicializa el componente antes de que se renderice por primera vez.
    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized");
    }

    // OnParametersSet: Este método se ejecuta cuando se reciben parámetros nuevos en el componente.
    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet");
    }

    // OnAfterRender: Este método se ejecuta después de que el componente se renderice en el navegador.
    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine($"OnAfterRender (First Render: {firstRender})");
    }

    // OnAfterRenderAsync: Este método es similar a OnAfterRender, pero puede esperar tareas asincrónicas antes de ejecutarse.
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine($"OnAfterRenderAsync (First Render: {firstRender})");
        return base.OnAfterRenderAsync(firstRender);
    }

    // OnInitializedAsync: Este método se ejecuta de forma asincrónica cuando se inicializa el componente antes de que se renderice por primera vez.
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitializedAsync");
        await Task.Delay(100); // Simulamos una tarea asincrónica.
    }

    // OnParametersSetAsync: Este método es similar a OnParametersSet, pero puede esperar tareas asincrónicas antes de ejecutarse.
    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine("OnParametersSetAsync");
        await Task.Delay(100); // Simulamos una tarea asincrónica.
    }

    // ShouldRender: Este método se utiliza para optimizar el renderizado, devolviendo false si no es necesario volver a renderizar el componente.
    protected override bool ShouldRender()
    {
        Console.WriteLine("ShouldRender");
        return base.ShouldRender();
    }

    // Dispose: Este método se ejecuta cuando el componente está siendo eliminado y se elimina de la memoria.
    public void Dispose()
    {
        Console.WriteLine("Dispose");
    }
}